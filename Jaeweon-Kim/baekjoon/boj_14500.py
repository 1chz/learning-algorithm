# 테트로미노

n, m = map(int, input().split())
board = [list(map(int, input().split())) for _ in range(n)]
tetris = [
    [(0,0), (0,1), (1,0), (1,1)], # ㅁ
    [(0,0), (0,1), (0,2), (0,3)], # ㅡ
    [(0,0), (1,0), (2,0), (3,0)], # ㅣ
    [(0,0), (0,1), (0,2), (1,0)], # ㄱ 대칭
    [(0,0), (1,0), (2,0), (2,1)], # 왼쪽 회전
    [(1,0), (1,1), (1,2), (0,2)], # 왼쪽 회전
    [(0,0), (0,1), (1,1), (1,2)], # 왼쪽 회전
    [(0,0), (0,1), (0,2), (1,2)], # ㄱ
    [(0,1), (1,1), (2,1), (2,0)], # 오른쪽 회전
    [(0,0), (1,0), (1,1), (1,2)], # 오른쪽 회전
    [(0,0), (0,1), (1,0), (2,0)], # 오른쪽 회전
    [(0,0), (1,0), (2,0), (1,1)], # ㅏ
    [(0,0), (0,1), (0,2), (1,1)], # ㅜ
    [(1,0), (0,1), (1,1), (2,1)], # ㅓ
    [(1,0), (1,1), (1,2), (0,1)], # ㅗ
    [(0,0), (1,0), (1,1), (2,1)], # ㄴㄱ
    [(1,0), (2,0), (0,1), (1,1)],
    [(1,0), (1,1), (0,1), (0,2)], # ㄴㄱ 반대로
    [(0,0), (0,1), (1,1), (2,1)],
]

def solve():
    answer = 0
    length = len(tetris)
    for x in range(n):
        for y in range(m):
            for i in range(length):
                result = 0
                for j in range(4):
                    nx = x + tetris[i][j][0]
                    ny = y + tetris[i][j][1]
                    if 0 <= nx < n and 0 <= ny < m:
                        result += board[nx][ny]
                answer = max(answer, result)
    print(answer)

solve()